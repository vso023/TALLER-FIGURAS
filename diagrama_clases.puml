@startuml

namespace figures {
interface IFigure{
    -figure_type
    -figure_id
    +id(): void
    +type(): void
}

' Producto abstracto
abstract class Figure2D <<abstract>> implements IFigure {
    -figure_type
    -figure_id
    +perimeter(): void
    +area(): void
}

' Producto abstracto
abstract class Figure3D <<abstract>> implements IFigure  {
    -figure_type
    -figure_id
    +volume(): void
    +surface(): void
}
}

namespace figures2D {
' Creadores concretos
class Circle {
    -ratio
    +area(): void
    +perimeter(): void
    +to_dict(): void
}

class Square {
    -side
    +area(): void
    +perimeter(): void
    +to_dict(): void
}

class Rectangle {
    -length
    -height
    +area(): void
    +perimeter(): void
    +to_dict(): void
}
}

namespace figures3D {
class Cube {
    -ratio
    +volume(): void
    +surface(): void
    +to_dict(): void
}

class Cuboid {
    -length
    -height
    -width
    +volume(): void
    +surface(): void
    +to_dict(): void
}

class Sphere {
    -ratio
    +volume(): void
    +surface(): void
    +to_dict(): void
}
}

namespace generator {
class IDGenerator {
    +id_generator(): void
}
}

namespace my_App {
class MyApp {
    +add_figure2d(): void
    +add_figure_3d(): void
    +display_all_figures(): void
    +display_2dfigures(): void
    +display_3dfigures(): void
    +select_2dfigure(): void
    +select_3dfigure(): void
    +run(): void
}
}

namespace popUp {
class PopUp {
    +display_results(): void
    +read_yes_or_no(): void
    +read_double(): void
    +read_int_greater_than(): void
    +read_menu_choice_buttons(): void
    +read_menu_choice_index(): void
    +read_menu_choice_string(): void
    +read_menu_choice_combobox(): void
}
}

class Main {
    +main()
}


@enduml